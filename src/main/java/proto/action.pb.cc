// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/action.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class BaseRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BaseResp> {
} _BaseResp_default_instance_;
class MIsFollowRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MIsFollowRequest> {
} _MIsFollowRequest_default_instance_;
class MIsFollowResponse_IsFollowerEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MIsFollowResponse::MIsFollowResponse_IsFollowerEntry> {
} _MIsFollowResponse_IsFollowerEntry_default_instance_;
class MIsFollowResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MIsFollowResponse> {
} _MIsFollowResponse_default_instance_;
class GetFollowListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetFollowListRequest> {
} _GetFollowListRequest_default_instance_;
class GetFollowListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetFollowListResponse> {
} _GetFollowListResponse_default_instance_;
class MGetFollowCountRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MGetFollowCountRequest> {
} _MGetFollowCountRequest_default_instance_;
class MGetFollowCountResponse_FollowingCountEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry> {
} _MGetFollowCountResponse_FollowingCountEntry_default_instance_;
class MGetFollowCountResponse_FollowerCountEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry> {
} _MGetFollowCountResponse_FollowerCountEntry_default_instance_;
class MGetFollowCountResponse_FriendCountEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry> {
} _MGetFollowCountResponse_FriendCountEntry_default_instance_;
class MGetFollowCountResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MGetFollowCountResponse> {
} _MGetFollowCountResponse_default_instance_;
class FollowRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FollowRequest> {
} _FollowRequest_default_instance_;
class FollowResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FollowResponse> {
} _FollowResponse_default_instance_;

namespace protobuf_proto_2faction_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, statuscode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, statusmessage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MIsFollowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MIsFollowRequest, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MIsFollowRequest, to_user_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MIsFollowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MIsFollowResponse, is_follower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MIsFollowResponse, baseresp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListRequest, min_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListRequest, max_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListRequest, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListResponse, user_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListResponse, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListResponse, has_more_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFollowListResponse, baseresp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountRequest, user_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountRequest, need_following_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountRequest, need_follower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountRequest, need_friend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountResponse, following_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountResponse, follower_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountResponse, friend_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MGetFollowCountResponse, baseresp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowRequest, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowRequest, to_user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowResponse, baseresp_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(BaseResp)},
  { 7, -1, sizeof(MIsFollowRequest)},
  { 14, -1, sizeof(MIsFollowResponse)},
  { 21, -1, sizeof(GetFollowListRequest)},
  { 30, -1, sizeof(GetFollowListResponse)},
  { 39, -1, sizeof(MGetFollowCountRequest)},
  { 48, -1, sizeof(MGetFollowCountResponse)},
  { 57, -1, sizeof(FollowRequest)},
  { 64, -1, sizeof(FollowResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MIsFollowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MIsFollowResponse_IsFollowerEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MIsFollowResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetFollowListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetFollowListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MGetFollowCountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MGetFollowCountResponse_FollowingCountEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MGetFollowCountResponse_FollowerCountEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MGetFollowCountResponse_FriendCountEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MGetFollowCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FollowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FollowResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "proto/action.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[2].reflection = MIsFollowResponse::MIsFollowResponse_IsFollowerEntry::CreateReflection(file_level_metadata[2].descriptor, _MIsFollowResponse_IsFollowerEntry_default_instance_.get_mutable());
file_level_metadata[7].reflection = MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry::CreateReflection(file_level_metadata[7].descriptor, _MGetFollowCountResponse_FollowingCountEntry_default_instance_.get_mutable());
file_level_metadata[8].reflection = MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry::CreateReflection(file_level_metadata[8].descriptor, _MGetFollowCountResponse_FollowerCountEntry_default_instance_.get_mutable());
file_level_metadata[9].reflection = MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry::CreateReflection(file_level_metadata[9].descriptor, _MGetFollowCountResponse_FriendCountEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace

void TableStruct::Shutdown() {
  _BaseResp_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MIsFollowRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MIsFollowResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _GetFollowListRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _GetFollowListResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MGetFollowCountRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MGetFollowCountResponse_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _FollowRequest_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _FollowResponse_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  delete file_level_metadata[2].reflection;
  delete file_level_metadata[7].reflection;
  delete file_level_metadata[8].reflection;
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BaseResp_default_instance_.DefaultConstruct();
  _MIsFollowRequest_default_instance_.DefaultConstruct();
  _MIsFollowResponse_IsFollowerEntry_default_instance_.DefaultConstruct();
  _MIsFollowResponse_default_instance_.DefaultConstruct();
  _GetFollowListRequest_default_instance_.DefaultConstruct();
  _GetFollowListResponse_default_instance_.DefaultConstruct();
  _MGetFollowCountRequest_default_instance_.DefaultConstruct();
  _MGetFollowCountResponse_FollowingCountEntry_default_instance_.DefaultConstruct();
  _MGetFollowCountResponse_FollowerCountEntry_default_instance_.DefaultConstruct();
  _MGetFollowCountResponse_FriendCountEntry_default_instance_.DefaultConstruct();
  _MGetFollowCountResponse_default_instance_.DefaultConstruct();
  _FollowRequest_default_instance_.DefaultConstruct();
  _FollowResponse_default_instance_.DefaultConstruct();
  _MIsFollowResponse_IsFollowerEntry_default_instance_.get_mutable()->set_default_instance(_MIsFollowResponse_IsFollowerEntry_default_instance_.get_mutable());
  _MIsFollowResponse_IsFollowerEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _MIsFollowResponse_default_instance_.get_mutable()->baseresp_ = const_cast< ::BaseResp*>(
      ::BaseResp::internal_default_instance());
  _GetFollowListResponse_default_instance_.get_mutable()->baseresp_ = const_cast< ::BaseResp*>(
      ::BaseResp::internal_default_instance());
  _MGetFollowCountResponse_FollowingCountEntry_default_instance_.get_mutable()->set_default_instance(_MGetFollowCountResponse_FollowingCountEntry_default_instance_.get_mutable());
  _MGetFollowCountResponse_FollowingCountEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _MGetFollowCountResponse_FollowerCountEntry_default_instance_.get_mutable()->set_default_instance(_MGetFollowCountResponse_FollowerCountEntry_default_instance_.get_mutable());
  _MGetFollowCountResponse_FollowerCountEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _MGetFollowCountResponse_FriendCountEntry_default_instance_.get_mutable()->set_default_instance(_MGetFollowCountResponse_FriendCountEntry_default_instance_.get_mutable());
  _MGetFollowCountResponse_FriendCountEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _MGetFollowCountResponse_default_instance_.get_mutable()->baseresp_ = const_cast< ::BaseResp*>(
      ::BaseResp::internal_default_instance());
  _FollowResponse_default_instance_.get_mutable()->baseresp_ = const_cast< ::BaseResp*>(
      ::BaseResp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022proto/action.proto\"B\n\010BaseResp\022\037\n\nStat"
      "usCode\030\001 \001(\0162\013.StatusCode\022\025\n\rStatusMessa"
      "ge\030\002 \001(\t\"=\n\020MIsFollowRequest\022\024\n\014from_use"
      "r_id\030\001 \001(\003\022\023\n\013to_user_ids\030\002 \003(\003\"\235\001\n\021MIsF"
      "ollowResponse\0227\n\013is_follower\030\001 \003(\0132\".MIs"
      "FollowResponse.IsFollowerEntry\022\034\n\010baseRe"
      "sp\030\377\001 \001(\0132\t.BaseResp\0321\n\017IsFollowerEntry\022"
      "\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\010:\0028\001\"Z\n\024GetFo"
      "llowListRequest\022\017\n\007user_id\030\001 \001(\003\022\020\n\010min_"
      "time\030\002 \001(\003\022\020\n\010max_time\030\003 \001(\003\022\r\n\005count\030\004 "
      "\001(\003\"h\n\025GetFollowListResponse\022\020\n\010user_ids"
      "\030\001 \003(\003\022\r\n\005total\030\002 \001(\003\022\020\n\010has_more\030\003 \001(\010\022"
      "\034\n\010baseResp\030\377\001 \001(\0132\t.BaseResp\"n\n\026MGetFol"
      "lowCountRequest\022\020\n\010user_ids\030\001 \003(\003\022\026\n\016nee"
      "d_following\030\002 \001(\010\022\025\n\rneed_follower\030\003 \001(\010"
      "\022\023\n\013need_friend\030\004 \001(\010\"\245\003\n\027MGetFollowCoun"
      "tResponse\022E\n\017following_count\030\001 \003(\0132,.MGe"
      "tFollowCountResponse.FollowingCountEntry"
      "\022C\n\016follower_count\030\002 \003(\0132+.MGetFollowCou"
      "ntResponse.FollowerCountEntry\022\?\n\014friend_"
      "count\030\003 \003(\0132).MGetFollowCountResponse.Fr"
      "iendCountEntry\022\034\n\010baseResp\030\377\001 \001(\0132\t.Base"
      "Resp\0325\n\023FollowingCountEntry\022\013\n\003key\030\001 \001(\003"
      "\022\r\n\005value\030\002 \001(\003:\0028\001\0324\n\022FollowerCountEntr"
      "y\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\0028\001\0322\n\020Fri"
      "endCountEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001("
      "\003:\0028\001\"9\n\rFollowRequest\022\024\n\014from_user_id\030\001"
      " \001(\003\022\022\n\nto_user_id\030\002 \001(\003\".\n\016FollowRespon"
      "se\022\034\n\010baseResp\030\377\001 \001(\0132\t.BaseResp*\263\001\n\nSta"
      "tusCode\022\026\n\022StatusCode_Not_Use\020\000\022\014\n\007Succe"
      "ss\020\350\007\022\021\n\014Server_Error\020\351\007\022\020\n\013Param_Error\020"
      "\352\007\022\030\n\023OverFrequency_Error\020\353\007\022\024\n\017OverLimi"
      "t_Error\020\354\007\022\024\n\017Duplicate_Error\020\355\007\022\024\n\017Retr"
      "yTime_Error\020\356\0072\370\003\n\rActionService\0227\n\014MIsF"
      "ollowing\022\021.MIsFollowRequest\032\022.MIsFollowR"
      "esponse\"\000\0226\n\013MIsFollower\022\021.MIsFollowRequ"
      "est\032\022.MIsFollowResponse\"\000\022C\n\020GetFollowin"
      "gList\022\025.GetFollowListRequest\032\026.GetFollow"
      "ListResponse\"\000\022B\n\017GetFollowerList\022\025.GetF"
      "ollowListRequest\032\026.GetFollowListResponse"
      "\"\000\022@\n\rGetFriendList\022\025.GetFollowListReque"
      "st\032\026.GetFollowListResponse\"\000\022E\n\016GetFollo"
      "wCount\022\027.MGetFollowCountRequest\032\030.MGetFo"
      "llowCountResponse\"\000\0221\n\014CommitFollow\022\016.Fo"
      "llowRequest\032\017.FollowResponse\"\000\0221\n\014Cancel"
      "Follow\022\016.FollowRequest\032\017.FollowResponse\""
      "\000B<\n%violet.action.common.proto_gen.acti"
      "onP\001Z\021/proto_gen/actionb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1911);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/action.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_proto_2faction_2eproto

const ::google::protobuf::EnumDescriptor* StatusCode_descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_enum_descriptors[0];
}
bool StatusCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseResp::kStatusCodeFieldNumber;
const int BaseResp::kStatusMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseResp::BaseResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseResp)
}
BaseResp::BaseResp(const BaseResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  statusmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.statusmessage().size() > 0) {
    statusmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statusmessage_);
  }
  statuscode_ = from.statuscode_;
  // @@protoc_insertion_point(copy_constructor:BaseResp)
}

void BaseResp::SharedCtor() {
  statusmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statuscode_ = 0;
  _cached_size_ = 0;
}

BaseResp::~BaseResp() {
  // @@protoc_insertion_point(destructor:BaseResp)
  SharedDtor();
}

void BaseResp::SharedDtor() {
  statusmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BaseResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseResp::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseResp& BaseResp::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseResp* BaseResp::New(::google::protobuf::Arena* arena) const {
  BaseResp* n = new BaseResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseResp)
  statusmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statuscode_ = 0;
}

bool BaseResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .StatusCode StatusCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_statuscode(static_cast< ::StatusCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string StatusMessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statusmessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->statusmessage().data(), this->statusmessage().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BaseResp.StatusMessage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseResp)
  return false;
#undef DO_
}

void BaseResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .StatusCode StatusCode = 1;
  if (this->statuscode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->statuscode(), output);
  }

  // string StatusMessage = 2;
  if (this->statusmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statusmessage().data(), this->statusmessage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BaseResp.StatusMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->statusmessage(), output);
  }

  // @@protoc_insertion_point(serialize_end:BaseResp)
}

::google::protobuf::uint8* BaseResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BaseResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .StatusCode StatusCode = 1;
  if (this->statuscode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->statuscode(), target);
  }

  // string StatusMessage = 2;
  if (this->statusmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statusmessage().data(), this->statusmessage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BaseResp.StatusMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->statusmessage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BaseResp)
  return target;
}

size_t BaseResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseResp)
  size_t total_size = 0;

  // string StatusMessage = 2;
  if (this->statusmessage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statusmessage());
  }

  // .StatusCode StatusCode = 1;
  if (this->statuscode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->statuscode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseResp)
    MergeFrom(*source);
  }
}

void BaseResp::MergeFrom(const BaseResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.statusmessage().size() > 0) {

    statusmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statusmessage_);
  }
  if (from.statuscode() != 0) {
    set_statuscode(from.statuscode());
  }
}

void BaseResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseResp::CopyFrom(const BaseResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseResp::IsInitialized() const {
  return true;
}

void BaseResp::Swap(BaseResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseResp::InternalSwap(BaseResp* other) {
  statusmessage_.Swap(&other->statusmessage_);
  std::swap(statuscode_, other->statuscode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseResp::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseResp

// .StatusCode StatusCode = 1;
void BaseResp::clear_statuscode() {
  statuscode_ = 0;
}
::StatusCode BaseResp::statuscode() const {
  // @@protoc_insertion_point(field_get:BaseResp.StatusCode)
  return static_cast< ::StatusCode >(statuscode_);
}
void BaseResp::set_statuscode(::StatusCode value) {
  
  statuscode_ = value;
  // @@protoc_insertion_point(field_set:BaseResp.StatusCode)
}

// string StatusMessage = 2;
void BaseResp::clear_statusmessage() {
  statusmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BaseResp::statusmessage() const {
  // @@protoc_insertion_point(field_get:BaseResp.StatusMessage)
  return statusmessage_.GetNoArena();
}
void BaseResp::set_statusmessage(const ::std::string& value) {
  
  statusmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BaseResp.StatusMessage)
}
#if LANG_CXX11
void BaseResp::set_statusmessage(::std::string&& value) {
  
  statusmessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BaseResp.StatusMessage)
}
#endif
void BaseResp::set_statusmessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  statusmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BaseResp.StatusMessage)
}
void BaseResp::set_statusmessage(const char* value, size_t size) {
  
  statusmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BaseResp.StatusMessage)
}
::std::string* BaseResp::mutable_statusmessage() {
  
  // @@protoc_insertion_point(field_mutable:BaseResp.StatusMessage)
  return statusmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BaseResp::release_statusmessage() {
  // @@protoc_insertion_point(field_release:BaseResp.StatusMessage)
  
  return statusmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BaseResp::set_allocated_statusmessage(::std::string* statusmessage) {
  if (statusmessage != NULL) {
    
  } else {
    
  }
  statusmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statusmessage);
  // @@protoc_insertion_point(field_set_allocated:BaseResp.StatusMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MIsFollowRequest::kFromUserIdFieldNumber;
const int MIsFollowRequest::kToUserIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MIsFollowRequest::MIsFollowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MIsFollowRequest)
}
MIsFollowRequest::MIsFollowRequest(const MIsFollowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      to_user_ids_(from.to_user_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_user_id_ = from.from_user_id_;
  // @@protoc_insertion_point(copy_constructor:MIsFollowRequest)
}

void MIsFollowRequest::SharedCtor() {
  from_user_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

MIsFollowRequest::~MIsFollowRequest() {
  // @@protoc_insertion_point(destructor:MIsFollowRequest)
  SharedDtor();
}

void MIsFollowRequest::SharedDtor() {
}

void MIsFollowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MIsFollowRequest::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MIsFollowRequest& MIsFollowRequest::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

MIsFollowRequest* MIsFollowRequest::New(::google::protobuf::Arena* arena) const {
  MIsFollowRequest* n = new MIsFollowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MIsFollowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MIsFollowRequest)
  to_user_ids_.Clear();
  from_user_id_ = GOOGLE_LONGLONG(0);
}

bool MIsFollowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MIsFollowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 from_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 to_user_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_to_user_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_to_user_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MIsFollowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MIsFollowRequest)
  return false;
#undef DO_
}

void MIsFollowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MIsFollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 from_user_id = 1;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->from_user_id(), output);
  }

  // repeated int64 to_user_ids = 2;
  if (this->to_user_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_to_user_ids_cached_byte_size_);
  }
  for (int i = 0, n = this->to_user_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->to_user_ids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MIsFollowRequest)
}

::google::protobuf::uint8* MIsFollowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MIsFollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 from_user_id = 1;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->from_user_id(), target);
  }

  // repeated int64 to_user_ids = 2;
  if (this->to_user_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _to_user_ids_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->to_user_ids_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MIsFollowRequest)
  return target;
}

size_t MIsFollowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MIsFollowRequest)
  size_t total_size = 0;

  // repeated int64 to_user_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->to_user_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _to_user_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 from_user_id = 1;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->from_user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MIsFollowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MIsFollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MIsFollowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MIsFollowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MIsFollowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MIsFollowRequest)
    MergeFrom(*source);
  }
}

void MIsFollowRequest::MergeFrom(const MIsFollowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MIsFollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  to_user_ids_.MergeFrom(from.to_user_ids_);
  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
}

void MIsFollowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MIsFollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MIsFollowRequest::CopyFrom(const MIsFollowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MIsFollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MIsFollowRequest::IsInitialized() const {
  return true;
}

void MIsFollowRequest::Swap(MIsFollowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MIsFollowRequest::InternalSwap(MIsFollowRequest* other) {
  to_user_ids_.InternalSwap(&other->to_user_ids_);
  std::swap(from_user_id_, other->from_user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MIsFollowRequest::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MIsFollowRequest

// int64 from_user_id = 1;
void MIsFollowRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MIsFollowRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:MIsFollowRequest.from_user_id)
  return from_user_id_;
}
void MIsFollowRequest::set_from_user_id(::google::protobuf::int64 value) {
  
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:MIsFollowRequest.from_user_id)
}

// repeated int64 to_user_ids = 2;
int MIsFollowRequest::to_user_ids_size() const {
  return to_user_ids_.size();
}
void MIsFollowRequest::clear_to_user_ids() {
  to_user_ids_.Clear();
}
::google::protobuf::int64 MIsFollowRequest::to_user_ids(int index) const {
  // @@protoc_insertion_point(field_get:MIsFollowRequest.to_user_ids)
  return to_user_ids_.Get(index);
}
void MIsFollowRequest::set_to_user_ids(int index, ::google::protobuf::int64 value) {
  to_user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:MIsFollowRequest.to_user_ids)
}
void MIsFollowRequest::add_to_user_ids(::google::protobuf::int64 value) {
  to_user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:MIsFollowRequest.to_user_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MIsFollowRequest::to_user_ids() const {
  // @@protoc_insertion_point(field_list:MIsFollowRequest.to_user_ids)
  return to_user_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MIsFollowRequest::mutable_to_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:MIsFollowRequest.to_user_ids)
  return &to_user_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

MIsFollowResponse::MIsFollowResponse_IsFollowerEntry::MIsFollowResponse_IsFollowerEntry() {}
MIsFollowResponse::MIsFollowResponse_IsFollowerEntry::MIsFollowResponse_IsFollowerEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MIsFollowResponse::MIsFollowResponse_IsFollowerEntry::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[2];
}
void MIsFollowResponse::MIsFollowResponse_IsFollowerEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MIsFollowResponse::MIsFollowResponse_IsFollowerEntry::MergeFrom(const MIsFollowResponse_IsFollowerEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MIsFollowResponse::kIsFollowerFieldNumber;
const int MIsFollowResponse::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MIsFollowResponse::MIsFollowResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MIsFollowResponse)
}
MIsFollowResponse::MIsFollowResponse(const MIsFollowResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_follower_.MergeFrom(from.is_follower_);
  if (from.has_baseresp()) {
    baseresp_ = new ::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MIsFollowResponse)
}

void MIsFollowResponse::SharedCtor() {
  baseresp_ = NULL;
  _cached_size_ = 0;
}

MIsFollowResponse::~MIsFollowResponse() {
  // @@protoc_insertion_point(destructor:MIsFollowResponse)
  SharedDtor();
}

void MIsFollowResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void MIsFollowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MIsFollowResponse::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MIsFollowResponse& MIsFollowResponse::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

MIsFollowResponse* MIsFollowResponse::New(::google::protobuf::Arena* arena) const {
  MIsFollowResponse* n = new MIsFollowResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MIsFollowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MIsFollowResponse)
  is_follower_.Clear();
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) {
    delete baseresp_;
  }
  baseresp_ = NULL;
}

bool MIsFollowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MIsFollowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, bool> is_follower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          MIsFollowResponse_IsFollowerEntry::Parser< ::google::protobuf::internal::MapField<
              MIsFollowResponse_IsFollowerEntry,
              ::google::protobuf::int64, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, bool > > parser(&is_follower_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BaseResp baseResp = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2042u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MIsFollowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MIsFollowResponse)
  return false;
#undef DO_
}

void MIsFollowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MIsFollowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, bool> is_follower = 1;
  if (!this->is_follower().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->is_follower().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->is_follower().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, bool >::const_iterator
          it = this->is_follower().begin();
          it != this->is_follower().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MIsFollowResponse_IsFollowerEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(is_follower_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<MIsFollowResponse_IsFollowerEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, bool >::const_iterator
          it = this->is_follower().begin();
          it != this->is_follower().end(); ++it) {
        entry.reset(is_follower_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, *this->baseresp_, output);
  }

  // @@protoc_insertion_point(serialize_end:MIsFollowResponse)
}

::google::protobuf::uint8* MIsFollowResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MIsFollowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, bool> is_follower = 1;
  if (!this->is_follower().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->is_follower().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->is_follower().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, bool >::const_iterator
          it = this->is_follower().begin();
          it != this->is_follower().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MIsFollowResponse_IsFollowerEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(is_follower_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<MIsFollowResponse_IsFollowerEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, bool >::const_iterator
          it = this->is_follower().begin();
          it != this->is_follower().end(); ++it) {
        entry.reset(is_follower_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        255, *this->baseresp_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MIsFollowResponse)
  return target;
}

size_t MIsFollowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MIsFollowResponse)
  size_t total_size = 0;

  // map<int64, bool> is_follower = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->is_follower_size());
  {
    ::google::protobuf::scoped_ptr<MIsFollowResponse_IsFollowerEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, bool >::const_iterator
        it = this->is_follower().begin();
        it != this->is_follower().end(); ++it) {
      entry.reset(is_follower_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MIsFollowResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MIsFollowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MIsFollowResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MIsFollowResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MIsFollowResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MIsFollowResponse)
    MergeFrom(*source);
  }
}

void MIsFollowResponse::MergeFrom(const MIsFollowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MIsFollowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  is_follower_.MergeFrom(from.is_follower_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::BaseResp::MergeFrom(from.baseresp());
  }
}

void MIsFollowResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MIsFollowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MIsFollowResponse::CopyFrom(const MIsFollowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MIsFollowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MIsFollowResponse::IsInitialized() const {
  return true;
}

void MIsFollowResponse::Swap(MIsFollowResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MIsFollowResponse::InternalSwap(MIsFollowResponse* other) {
  is_follower_.Swap(&other->is_follower_);
  std::swap(baseresp_, other->baseresp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MIsFollowResponse::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MIsFollowResponse

// map<int64, bool> is_follower = 1;
int MIsFollowResponse::is_follower_size() const {
  return is_follower_.size();
}
void MIsFollowResponse::clear_is_follower() {
  is_follower_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, bool >&
MIsFollowResponse::is_follower() const {
  // @@protoc_insertion_point(field_map:MIsFollowResponse.is_follower)
  return is_follower_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, bool >*
MIsFollowResponse::mutable_is_follower() {
  // @@protoc_insertion_point(field_mutable_map:MIsFollowResponse.is_follower)
  return is_follower_.MutableMap();
}

// .BaseResp baseResp = 255;
bool MIsFollowResponse::has_baseresp() const {
  return this != internal_default_instance() && baseresp_ != NULL;
}
void MIsFollowResponse::clear_baseresp() {
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) delete baseresp_;
  baseresp_ = NULL;
}
const ::BaseResp& MIsFollowResponse::baseresp() const {
  // @@protoc_insertion_point(field_get:MIsFollowResponse.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::BaseResp::internal_default_instance();
}
::BaseResp* MIsFollowResponse::mutable_baseresp() {
  
  if (baseresp_ == NULL) {
    baseresp_ = new ::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:MIsFollowResponse.baseResp)
  return baseresp_;
}
::BaseResp* MIsFollowResponse::release_baseresp() {
  // @@protoc_insertion_point(field_release:MIsFollowResponse.baseResp)
  
  ::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void MIsFollowResponse::set_allocated_baseresp(::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MIsFollowResponse.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFollowListRequest::kUserIdFieldNumber;
const int GetFollowListRequest::kMinTimeFieldNumber;
const int GetFollowListRequest::kMaxTimeFieldNumber;
const int GetFollowListRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFollowListRequest::GetFollowListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetFollowListRequest)
}
GetFollowListRequest::GetFollowListRequest(const GetFollowListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:GetFollowListRequest)
}

void GetFollowListRequest::SharedCtor() {
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(count_));
  _cached_size_ = 0;
}

GetFollowListRequest::~GetFollowListRequest() {
  // @@protoc_insertion_point(destructor:GetFollowListRequest)
  SharedDtor();
}

void GetFollowListRequest::SharedDtor() {
}

void GetFollowListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFollowListRequest::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFollowListRequest& GetFollowListRequest::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetFollowListRequest* GetFollowListRequest::New(::google::protobuf::Arena* arena) const {
  GetFollowListRequest* n = new GetFollowListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFollowListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetFollowListRequest)
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(count_));
}

bool GetFollowListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetFollowListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 min_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetFollowListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetFollowListRequest)
  return false;
#undef DO_
}

void GetFollowListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetFollowListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->user_id(), output);
  }

  // int64 min_time = 2;
  if (this->min_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->min_time(), output);
  }

  // int64 max_time = 3;
  if (this->max_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_time(), output);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:GetFollowListRequest)
}

::google::protobuf::uint8* GetFollowListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetFollowListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->user_id(), target);
  }

  // int64 min_time = 2;
  if (this->min_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->min_time(), target);
  }

  // int64 max_time = 3;
  if (this->max_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_time(), target);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GetFollowListRequest)
  return target;
}

size_t GetFollowListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetFollowListRequest)
  size_t total_size = 0;

  // int64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // int64 min_time = 2;
  if (this->min_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->min_time());
  }

  // int64 max_time = 3;
  if (this->max_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_time());
  }

  // int64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFollowListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetFollowListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFollowListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFollowListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetFollowListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetFollowListRequest)
    MergeFrom(*source);
  }
}

void GetFollowListRequest::MergeFrom(const GetFollowListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetFollowListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.min_time() != 0) {
    set_min_time(from.min_time());
  }
  if (from.max_time() != 0) {
    set_max_time(from.max_time());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void GetFollowListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetFollowListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFollowListRequest::CopyFrom(const GetFollowListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetFollowListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFollowListRequest::IsInitialized() const {
  return true;
}

void GetFollowListRequest::Swap(GetFollowListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFollowListRequest::InternalSwap(GetFollowListRequest* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(min_time_, other->min_time_);
  std::swap(max_time_, other->max_time_);
  std::swap(count_, other->count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFollowListRequest::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFollowListRequest

// int64 user_id = 1;
void GetFollowListRequest::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetFollowListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:GetFollowListRequest.user_id)
  return user_id_;
}
void GetFollowListRequest::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:GetFollowListRequest.user_id)
}

// int64 min_time = 2;
void GetFollowListRequest::clear_min_time() {
  min_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetFollowListRequest::min_time() const {
  // @@protoc_insertion_point(field_get:GetFollowListRequest.min_time)
  return min_time_;
}
void GetFollowListRequest::set_min_time(::google::protobuf::int64 value) {
  
  min_time_ = value;
  // @@protoc_insertion_point(field_set:GetFollowListRequest.min_time)
}

// int64 max_time = 3;
void GetFollowListRequest::clear_max_time() {
  max_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetFollowListRequest::max_time() const {
  // @@protoc_insertion_point(field_get:GetFollowListRequest.max_time)
  return max_time_;
}
void GetFollowListRequest::set_max_time(::google::protobuf::int64 value) {
  
  max_time_ = value;
  // @@protoc_insertion_point(field_set:GetFollowListRequest.max_time)
}

// int64 count = 4;
void GetFollowListRequest::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetFollowListRequest::count() const {
  // @@protoc_insertion_point(field_get:GetFollowListRequest.count)
  return count_;
}
void GetFollowListRequest::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GetFollowListRequest.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFollowListResponse::kUserIdsFieldNumber;
const int GetFollowListResponse::kTotalFieldNumber;
const int GetFollowListResponse::kHasMoreFieldNumber;
const int GetFollowListResponse::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFollowListResponse::GetFollowListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetFollowListResponse)
}
GetFollowListResponse::GetFollowListResponse(const GetFollowListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_ids_(from.user_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  ::memcpy(&total_, &from.total_,
    reinterpret_cast<char*>(&has_more_) -
    reinterpret_cast<char*>(&total_) + sizeof(has_more_));
  // @@protoc_insertion_point(copy_constructor:GetFollowListResponse)
}

void GetFollowListResponse::SharedCtor() {
  ::memset(&baseresp_, 0, reinterpret_cast<char*>(&has_more_) -
    reinterpret_cast<char*>(&baseresp_) + sizeof(has_more_));
  _cached_size_ = 0;
}

GetFollowListResponse::~GetFollowListResponse() {
  // @@protoc_insertion_point(destructor:GetFollowListResponse)
  SharedDtor();
}

void GetFollowListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void GetFollowListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFollowListResponse::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFollowListResponse& GetFollowListResponse::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetFollowListResponse* GetFollowListResponse::New(::google::protobuf::Arena* arena) const {
  GetFollowListResponse* n = new GetFollowListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFollowListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetFollowListResponse)
  user_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) {
    delete baseresp_;
  }
  baseresp_ = NULL;
  ::memset(&total_, 0, reinterpret_cast<char*>(&has_more_) -
    reinterpret_cast<char*>(&total_) + sizeof(has_more_));
}

bool GetFollowListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetFollowListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 user_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_user_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_user_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_more = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_more_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BaseResp baseResp = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2042u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetFollowListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetFollowListResponse)
  return false;
#undef DO_
}

void GetFollowListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetFollowListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 user_ids = 1;
  if (this->user_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_user_ids_cached_byte_size_);
  }
  for (int i = 0, n = this->user_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->user_ids(i), output);
  }

  // int64 total = 2;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->total(), output);
  }

  // bool has_more = 3;
  if (this->has_more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_more(), output);
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, *this->baseresp_, output);
  }

  // @@protoc_insertion_point(serialize_end:GetFollowListResponse)
}

::google::protobuf::uint8* GetFollowListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetFollowListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 user_ids = 1;
  if (this->user_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _user_ids_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->user_ids_, target);
  }

  // int64 total = 2;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->total(), target);
  }

  // bool has_more = 3;
  if (this->has_more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_more(), target);
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        255, *this->baseresp_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GetFollowListResponse)
  return target;
}

size_t GetFollowListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetFollowListResponse)
  size_t total_size = 0;

  // repeated int64 user_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->user_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  // int64 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total());
  }

  // bool has_more = 3;
  if (this->has_more() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFollowListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetFollowListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFollowListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFollowListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetFollowListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetFollowListResponse)
    MergeFrom(*source);
  }
}

void GetFollowListResponse::MergeFrom(const GetFollowListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetFollowListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_ids_.MergeFrom(from.user_ids_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::BaseResp::MergeFrom(from.baseresp());
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.has_more() != 0) {
    set_has_more(from.has_more());
  }
}

void GetFollowListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetFollowListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFollowListResponse::CopyFrom(const GetFollowListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetFollowListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFollowListResponse::IsInitialized() const {
  return true;
}

void GetFollowListResponse::Swap(GetFollowListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFollowListResponse::InternalSwap(GetFollowListResponse* other) {
  user_ids_.InternalSwap(&other->user_ids_);
  std::swap(baseresp_, other->baseresp_);
  std::swap(total_, other->total_);
  std::swap(has_more_, other->has_more_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFollowListResponse::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFollowListResponse

// repeated int64 user_ids = 1;
int GetFollowListResponse::user_ids_size() const {
  return user_ids_.size();
}
void GetFollowListResponse::clear_user_ids() {
  user_ids_.Clear();
}
::google::protobuf::int64 GetFollowListResponse::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:GetFollowListResponse.user_ids)
  return user_ids_.Get(index);
}
void GetFollowListResponse::set_user_ids(int index, ::google::protobuf::int64 value) {
  user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GetFollowListResponse.user_ids)
}
void GetFollowListResponse::add_user_ids(::google::protobuf::int64 value) {
  user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:GetFollowListResponse.user_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetFollowListResponse::user_ids() const {
  // @@protoc_insertion_point(field_list:GetFollowListResponse.user_ids)
  return user_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetFollowListResponse::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:GetFollowListResponse.user_ids)
  return &user_ids_;
}

// int64 total = 2;
void GetFollowListResponse::clear_total() {
  total_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetFollowListResponse::total() const {
  // @@protoc_insertion_point(field_get:GetFollowListResponse.total)
  return total_;
}
void GetFollowListResponse::set_total(::google::protobuf::int64 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:GetFollowListResponse.total)
}

// bool has_more = 3;
void GetFollowListResponse::clear_has_more() {
  has_more_ = false;
}
bool GetFollowListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:GetFollowListResponse.has_more)
  return has_more_;
}
void GetFollowListResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:GetFollowListResponse.has_more)
}

// .BaseResp baseResp = 255;
bool GetFollowListResponse::has_baseresp() const {
  return this != internal_default_instance() && baseresp_ != NULL;
}
void GetFollowListResponse::clear_baseresp() {
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) delete baseresp_;
  baseresp_ = NULL;
}
const ::BaseResp& GetFollowListResponse::baseresp() const {
  // @@protoc_insertion_point(field_get:GetFollowListResponse.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::BaseResp::internal_default_instance();
}
::BaseResp* GetFollowListResponse::mutable_baseresp() {
  
  if (baseresp_ == NULL) {
    baseresp_ = new ::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:GetFollowListResponse.baseResp)
  return baseresp_;
}
::BaseResp* GetFollowListResponse::release_baseresp() {
  // @@protoc_insertion_point(field_release:GetFollowListResponse.baseResp)
  
  ::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void GetFollowListResponse::set_allocated_baseresp(::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GetFollowListResponse.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGetFollowCountRequest::kUserIdsFieldNumber;
const int MGetFollowCountRequest::kNeedFollowingFieldNumber;
const int MGetFollowCountRequest::kNeedFollowerFieldNumber;
const int MGetFollowCountRequest::kNeedFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGetFollowCountRequest::MGetFollowCountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MGetFollowCountRequest)
}
MGetFollowCountRequest::MGetFollowCountRequest(const MGetFollowCountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_ids_(from.user_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&need_following_, &from.need_following_,
    reinterpret_cast<char*>(&need_friend_) -
    reinterpret_cast<char*>(&need_following_) + sizeof(need_friend_));
  // @@protoc_insertion_point(copy_constructor:MGetFollowCountRequest)
}

void MGetFollowCountRequest::SharedCtor() {
  ::memset(&need_following_, 0, reinterpret_cast<char*>(&need_friend_) -
    reinterpret_cast<char*>(&need_following_) + sizeof(need_friend_));
  _cached_size_ = 0;
}

MGetFollowCountRequest::~MGetFollowCountRequest() {
  // @@protoc_insertion_point(destructor:MGetFollowCountRequest)
  SharedDtor();
}

void MGetFollowCountRequest::SharedDtor() {
}

void MGetFollowCountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MGetFollowCountRequest::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGetFollowCountRequest& MGetFollowCountRequest::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

MGetFollowCountRequest* MGetFollowCountRequest::New(::google::protobuf::Arena* arena) const {
  MGetFollowCountRequest* n = new MGetFollowCountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MGetFollowCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MGetFollowCountRequest)
  user_ids_.Clear();
  ::memset(&need_following_, 0, reinterpret_cast<char*>(&need_friend_) -
    reinterpret_cast<char*>(&need_following_) + sizeof(need_friend_));
}

bool MGetFollowCountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MGetFollowCountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 user_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_user_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_user_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool need_following = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_following_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool need_follower = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_follower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool need_friend = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MGetFollowCountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MGetFollowCountRequest)
  return false;
#undef DO_
}

void MGetFollowCountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MGetFollowCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 user_ids = 1;
  if (this->user_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_user_ids_cached_byte_size_);
  }
  for (int i = 0, n = this->user_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->user_ids(i), output);
  }

  // bool need_following = 2;
  if (this->need_following() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->need_following(), output);
  }

  // bool need_follower = 3;
  if (this->need_follower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->need_follower(), output);
  }

  // bool need_friend = 4;
  if (this->need_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->need_friend(), output);
  }

  // @@protoc_insertion_point(serialize_end:MGetFollowCountRequest)
}

::google::protobuf::uint8* MGetFollowCountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MGetFollowCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 user_ids = 1;
  if (this->user_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _user_ids_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->user_ids_, target);
  }

  // bool need_following = 2;
  if (this->need_following() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->need_following(), target);
  }

  // bool need_follower = 3;
  if (this->need_follower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->need_follower(), target);
  }

  // bool need_friend = 4;
  if (this->need_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->need_friend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MGetFollowCountRequest)
  return target;
}

size_t MGetFollowCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MGetFollowCountRequest)
  size_t total_size = 0;

  // repeated int64 user_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->user_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool need_following = 2;
  if (this->need_following() != 0) {
    total_size += 1 + 1;
  }

  // bool need_follower = 3;
  if (this->need_follower() != 0) {
    total_size += 1 + 1;
  }

  // bool need_friend = 4;
  if (this->need_friend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MGetFollowCountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MGetFollowCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MGetFollowCountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGetFollowCountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MGetFollowCountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MGetFollowCountRequest)
    MergeFrom(*source);
  }
}

void MGetFollowCountRequest::MergeFrom(const MGetFollowCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MGetFollowCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_ids_.MergeFrom(from.user_ids_);
  if (from.need_following() != 0) {
    set_need_following(from.need_following());
  }
  if (from.need_follower() != 0) {
    set_need_follower(from.need_follower());
  }
  if (from.need_friend() != 0) {
    set_need_friend(from.need_friend());
  }
}

void MGetFollowCountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MGetFollowCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGetFollowCountRequest::CopyFrom(const MGetFollowCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MGetFollowCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGetFollowCountRequest::IsInitialized() const {
  return true;
}

void MGetFollowCountRequest::Swap(MGetFollowCountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGetFollowCountRequest::InternalSwap(MGetFollowCountRequest* other) {
  user_ids_.InternalSwap(&other->user_ids_);
  std::swap(need_following_, other->need_following_);
  std::swap(need_follower_, other->need_follower_);
  std::swap(need_friend_, other->need_friend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MGetFollowCountRequest::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MGetFollowCountRequest

// repeated int64 user_ids = 1;
int MGetFollowCountRequest::user_ids_size() const {
  return user_ids_.size();
}
void MGetFollowCountRequest::clear_user_ids() {
  user_ids_.Clear();
}
::google::protobuf::int64 MGetFollowCountRequest::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:MGetFollowCountRequest.user_ids)
  return user_ids_.Get(index);
}
void MGetFollowCountRequest::set_user_ids(int index, ::google::protobuf::int64 value) {
  user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:MGetFollowCountRequest.user_ids)
}
void MGetFollowCountRequest::add_user_ids(::google::protobuf::int64 value) {
  user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:MGetFollowCountRequest.user_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MGetFollowCountRequest::user_ids() const {
  // @@protoc_insertion_point(field_list:MGetFollowCountRequest.user_ids)
  return user_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MGetFollowCountRequest::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:MGetFollowCountRequest.user_ids)
  return &user_ids_;
}

// bool need_following = 2;
void MGetFollowCountRequest::clear_need_following() {
  need_following_ = false;
}
bool MGetFollowCountRequest::need_following() const {
  // @@protoc_insertion_point(field_get:MGetFollowCountRequest.need_following)
  return need_following_;
}
void MGetFollowCountRequest::set_need_following(bool value) {
  
  need_following_ = value;
  // @@protoc_insertion_point(field_set:MGetFollowCountRequest.need_following)
}

// bool need_follower = 3;
void MGetFollowCountRequest::clear_need_follower() {
  need_follower_ = false;
}
bool MGetFollowCountRequest::need_follower() const {
  // @@protoc_insertion_point(field_get:MGetFollowCountRequest.need_follower)
  return need_follower_;
}
void MGetFollowCountRequest::set_need_follower(bool value) {
  
  need_follower_ = value;
  // @@protoc_insertion_point(field_set:MGetFollowCountRequest.need_follower)
}

// bool need_friend = 4;
void MGetFollowCountRequest::clear_need_friend() {
  need_friend_ = false;
}
bool MGetFollowCountRequest::need_friend() const {
  // @@protoc_insertion_point(field_get:MGetFollowCountRequest.need_friend)
  return need_friend_;
}
void MGetFollowCountRequest::set_need_friend(bool value) {
  
  need_friend_ = value;
  // @@protoc_insertion_point(field_set:MGetFollowCountRequest.need_friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry::MGetFollowCountResponse_FollowingCountEntry() {}
MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry::MGetFollowCountResponse_FollowingCountEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[7];
}
void MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MGetFollowCountResponse::MGetFollowCountResponse_FollowingCountEntry::MergeFrom(const MGetFollowCountResponse_FollowingCountEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry::MGetFollowCountResponse_FollowerCountEntry() {}
MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry::MGetFollowCountResponse_FollowerCountEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[8];
}
void MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MGetFollowCountResponse::MGetFollowCountResponse_FollowerCountEntry::MergeFrom(const MGetFollowCountResponse_FollowerCountEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry::MGetFollowCountResponse_FriendCountEntry() {}
MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry::MGetFollowCountResponse_FriendCountEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[9];
}
void MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MGetFollowCountResponse::MGetFollowCountResponse_FriendCountEntry::MergeFrom(const MGetFollowCountResponse_FriendCountEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MGetFollowCountResponse::kFollowingCountFieldNumber;
const int MGetFollowCountResponse::kFollowerCountFieldNumber;
const int MGetFollowCountResponse::kFriendCountFieldNumber;
const int MGetFollowCountResponse::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MGetFollowCountResponse::MGetFollowCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MGetFollowCountResponse)
}
MGetFollowCountResponse::MGetFollowCountResponse(const MGetFollowCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  following_count_.MergeFrom(from.following_count_);
  follower_count_.MergeFrom(from.follower_count_);
  friend_count_.MergeFrom(from.friend_count_);
  if (from.has_baseresp()) {
    baseresp_ = new ::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MGetFollowCountResponse)
}

void MGetFollowCountResponse::SharedCtor() {
  baseresp_ = NULL;
  _cached_size_ = 0;
}

MGetFollowCountResponse::~MGetFollowCountResponse() {
  // @@protoc_insertion_point(destructor:MGetFollowCountResponse)
  SharedDtor();
}

void MGetFollowCountResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void MGetFollowCountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MGetFollowCountResponse::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MGetFollowCountResponse& MGetFollowCountResponse::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

MGetFollowCountResponse* MGetFollowCountResponse::New(::google::protobuf::Arena* arena) const {
  MGetFollowCountResponse* n = new MGetFollowCountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MGetFollowCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MGetFollowCountResponse)
  following_count_.Clear();
  follower_count_.Clear();
  friend_count_.Clear();
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) {
    delete baseresp_;
  }
  baseresp_ = NULL;
}

bool MGetFollowCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MGetFollowCountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, int64> following_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          MGetFollowCountResponse_FollowingCountEntry::Parser< ::google::protobuf::internal::MapField<
              MGetFollowCountResponse_FollowingCountEntry,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&following_count_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, int64> follower_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          MGetFollowCountResponse_FollowerCountEntry::Parser< ::google::protobuf::internal::MapField<
              MGetFollowCountResponse_FollowerCountEntry,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&follower_count_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, int64> friend_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          MGetFollowCountResponse_FriendCountEntry::Parser< ::google::protobuf::internal::MapField<
              MGetFollowCountResponse_FriendCountEntry,
              ::google::protobuf::int64, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 > > parser(&friend_count_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BaseResp baseResp = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2042u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MGetFollowCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MGetFollowCountResponse)
  return false;
#undef DO_
}

void MGetFollowCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MGetFollowCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, int64> following_count = 1;
  if (!this->following_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->following_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->following_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->following_count().begin();
          it != this->following_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowingCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(following_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowingCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->following_count().begin();
          it != this->following_count().end(); ++it) {
        entry.reset(following_count_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<int64, int64> follower_count = 2;
  if (!this->follower_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->follower_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->follower_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->follower_count().begin();
          it != this->follower_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowerCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(follower_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowerCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->follower_count().begin();
          it != this->follower_count().end(); ++it) {
        entry.reset(follower_count_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // map<int64, int64> friend_count = 3;
  if (!this->friend_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->friend_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->friend_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->friend_count().begin();
          it != this->friend_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FriendCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(friend_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FriendCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->friend_count().begin();
          it != this->friend_count().end(); ++it) {
        entry.reset(friend_count_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, *this->baseresp_, output);
  }

  // @@protoc_insertion_point(serialize_end:MGetFollowCountResponse)
}

::google::protobuf::uint8* MGetFollowCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MGetFollowCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, int64> following_count = 1;
  if (!this->following_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->following_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->following_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->following_count().begin();
          it != this->following_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowingCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(following_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowingCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->following_count().begin();
          it != this->following_count().end(); ++it) {
        entry.reset(following_count_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<int64, int64> follower_count = 2;
  if (!this->follower_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->follower_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->follower_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->follower_count().begin();
          it != this->follower_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowerCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(follower_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowerCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->follower_count().begin();
          it != this->follower_count().end(); ++it) {
        entry.reset(follower_count_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // map<int64, int64> friend_count = 3;
  if (!this->friend_count().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->friend_count().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->friend_count().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->friend_count().begin();
          it != this->friend_count().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FriendCountEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(friend_count_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FriendCountEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
          it = this->friend_count().begin();
          it != this->friend_count().end(); ++it) {
        entry.reset(friend_count_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        255, *this->baseresp_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MGetFollowCountResponse)
  return target;
}

size_t MGetFollowCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MGetFollowCountResponse)
  size_t total_size = 0;

  // map<int64, int64> following_count = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->following_count_size());
  {
    ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowingCountEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->following_count().begin();
        it != this->following_count().end(); ++it) {
      entry.reset(following_count_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int64, int64> follower_count = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->follower_count_size());
  {
    ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FollowerCountEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->follower_count().begin();
        it != this->follower_count().end(); ++it) {
      entry.reset(follower_count_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int64, int64> friend_count = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->friend_count_size());
  {
    ::google::protobuf::scoped_ptr<MGetFollowCountResponse_FriendCountEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >::const_iterator
        it = this->friend_count().begin();
        it != this->friend_count().end(); ++it) {
      entry.reset(friend_count_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MGetFollowCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MGetFollowCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MGetFollowCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MGetFollowCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MGetFollowCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MGetFollowCountResponse)
    MergeFrom(*source);
  }
}

void MGetFollowCountResponse::MergeFrom(const MGetFollowCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MGetFollowCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  following_count_.MergeFrom(from.following_count_);
  follower_count_.MergeFrom(from.follower_count_);
  friend_count_.MergeFrom(from.friend_count_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::BaseResp::MergeFrom(from.baseresp());
  }
}

void MGetFollowCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MGetFollowCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MGetFollowCountResponse::CopyFrom(const MGetFollowCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MGetFollowCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MGetFollowCountResponse::IsInitialized() const {
  return true;
}

void MGetFollowCountResponse::Swap(MGetFollowCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MGetFollowCountResponse::InternalSwap(MGetFollowCountResponse* other) {
  following_count_.Swap(&other->following_count_);
  follower_count_.Swap(&other->follower_count_);
  friend_count_.Swap(&other->friend_count_);
  std::swap(baseresp_, other->baseresp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MGetFollowCountResponse::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MGetFollowCountResponse

// map<int64, int64> following_count = 1;
int MGetFollowCountResponse::following_count_size() const {
  return following_count_.size();
}
void MGetFollowCountResponse::clear_following_count() {
  following_count_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
MGetFollowCountResponse::following_count() const {
  // @@protoc_insertion_point(field_map:MGetFollowCountResponse.following_count)
  return following_count_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
MGetFollowCountResponse::mutable_following_count() {
  // @@protoc_insertion_point(field_mutable_map:MGetFollowCountResponse.following_count)
  return following_count_.MutableMap();
}

// map<int64, int64> follower_count = 2;
int MGetFollowCountResponse::follower_count_size() const {
  return follower_count_.size();
}
void MGetFollowCountResponse::clear_follower_count() {
  follower_count_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
MGetFollowCountResponse::follower_count() const {
  // @@protoc_insertion_point(field_map:MGetFollowCountResponse.follower_count)
  return follower_count_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
MGetFollowCountResponse::mutable_follower_count() {
  // @@protoc_insertion_point(field_mutable_map:MGetFollowCountResponse.follower_count)
  return follower_count_.MutableMap();
}

// map<int64, int64> friend_count = 3;
int MGetFollowCountResponse::friend_count_size() const {
  return friend_count_.size();
}
void MGetFollowCountResponse::clear_friend_count() {
  friend_count_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
MGetFollowCountResponse::friend_count() const {
  // @@protoc_insertion_point(field_map:MGetFollowCountResponse.friend_count)
  return friend_count_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
MGetFollowCountResponse::mutable_friend_count() {
  // @@protoc_insertion_point(field_mutable_map:MGetFollowCountResponse.friend_count)
  return friend_count_.MutableMap();
}

// .BaseResp baseResp = 255;
bool MGetFollowCountResponse::has_baseresp() const {
  return this != internal_default_instance() && baseresp_ != NULL;
}
void MGetFollowCountResponse::clear_baseresp() {
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) delete baseresp_;
  baseresp_ = NULL;
}
const ::BaseResp& MGetFollowCountResponse::baseresp() const {
  // @@protoc_insertion_point(field_get:MGetFollowCountResponse.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::BaseResp::internal_default_instance();
}
::BaseResp* MGetFollowCountResponse::mutable_baseresp() {
  
  if (baseresp_ == NULL) {
    baseresp_ = new ::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:MGetFollowCountResponse.baseResp)
  return baseresp_;
}
::BaseResp* MGetFollowCountResponse::release_baseresp() {
  // @@protoc_insertion_point(field_release:MGetFollowCountResponse.baseResp)
  
  ::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void MGetFollowCountResponse::set_allocated_baseresp(::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MGetFollowCountResponse.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowRequest::kFromUserIdFieldNumber;
const int FollowRequest::kToUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowRequest::FollowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FollowRequest)
}
FollowRequest::FollowRequest(const FollowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_user_id_, &from.from_user_id_,
    reinterpret_cast<char*>(&to_user_id_) -
    reinterpret_cast<char*>(&from_user_id_) + sizeof(to_user_id_));
  // @@protoc_insertion_point(copy_constructor:FollowRequest)
}

void FollowRequest::SharedCtor() {
  ::memset(&from_user_id_, 0, reinterpret_cast<char*>(&to_user_id_) -
    reinterpret_cast<char*>(&from_user_id_) + sizeof(to_user_id_));
  _cached_size_ = 0;
}

FollowRequest::~FollowRequest() {
  // @@protoc_insertion_point(destructor:FollowRequest)
  SharedDtor();
}

void FollowRequest::SharedDtor() {
}

void FollowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowRequest::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowRequest& FollowRequest::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

FollowRequest* FollowRequest::New(::google::protobuf::Arena* arena) const {
  FollowRequest* n = new FollowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FollowRequest)
  ::memset(&from_user_id_, 0, reinterpret_cast<char*>(&to_user_id_) -
    reinterpret_cast<char*>(&from_user_id_) + sizeof(to_user_id_));
}

bool FollowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FollowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 from_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 to_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &to_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FollowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FollowRequest)
  return false;
#undef DO_
}

void FollowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 from_user_id = 1;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->from_user_id(), output);
  }

  // int64 to_user_id = 2;
  if (this->to_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->to_user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:FollowRequest)
}

::google::protobuf::uint8* FollowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 from_user_id = 1;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->from_user_id(), target);
  }

  // int64 to_user_id = 2;
  if (this->to_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->to_user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FollowRequest)
  return target;
}

size_t FollowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FollowRequest)
  size_t total_size = 0;

  // int64 from_user_id = 1;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->from_user_id());
  }

  // int64 to_user_id = 2;
  if (this->to_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->to_user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FollowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FollowRequest)
    MergeFrom(*source);
  }
}

void FollowRequest::MergeFrom(const FollowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.to_user_id() != 0) {
    set_to_user_id(from.to_user_id());
  }
}

void FollowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowRequest::CopyFrom(const FollowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowRequest::IsInitialized() const {
  return true;
}

void FollowRequest::Swap(FollowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowRequest::InternalSwap(FollowRequest* other) {
  std::swap(from_user_id_, other->from_user_id_);
  std::swap(to_user_id_, other->to_user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowRequest::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FollowRequest

// int64 from_user_id = 1;
void FollowRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FollowRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:FollowRequest.from_user_id)
  return from_user_id_;
}
void FollowRequest::set_from_user_id(::google::protobuf::int64 value) {
  
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:FollowRequest.from_user_id)
}

// int64 to_user_id = 2;
void FollowRequest::clear_to_user_id() {
  to_user_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FollowRequest::to_user_id() const {
  // @@protoc_insertion_point(field_get:FollowRequest.to_user_id)
  return to_user_id_;
}
void FollowRequest::set_to_user_id(::google::protobuf::int64 value) {
  
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:FollowRequest.to_user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowResponse::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowResponse::FollowResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2faction_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FollowResponse)
}
FollowResponse::FollowResponse(const FollowResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FollowResponse)
}

void FollowResponse::SharedCtor() {
  baseresp_ = NULL;
  _cached_size_ = 0;
}

FollowResponse::~FollowResponse() {
  // @@protoc_insertion_point(destructor:FollowResponse)
  SharedDtor();
}

void FollowResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void FollowResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowResponse::descriptor() {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowResponse& FollowResponse::default_instance() {
  protobuf_proto_2faction_2eproto::InitDefaults();
  return *internal_default_instance();
}

FollowResponse* FollowResponse::New(::google::protobuf::Arena* arena) const {
  FollowResponse* n = new FollowResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FollowResponse)
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) {
    delete baseresp_;
  }
  baseresp_ = NULL;
}

bool FollowResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FollowResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BaseResp baseResp = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2042u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FollowResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FollowResponse)
  return false;
#undef DO_
}

void FollowResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FollowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, *this->baseresp_, output);
  }

  // @@protoc_insertion_point(serialize_end:FollowResponse)
}

::google::protobuf::uint8* FollowResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FollowResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        255, *this->baseresp_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FollowResponse)
  return target;
}

size_t FollowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FollowResponse)
  size_t total_size = 0;

  // .BaseResp baseResp = 255;
  if (this->has_baseresp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FollowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FollowResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FollowResponse)
    MergeFrom(*source);
  }
}

void FollowResponse::MergeFrom(const FollowResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FollowResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseresp()) {
    mutable_baseresp()->::BaseResp::MergeFrom(from.baseresp());
  }
}

void FollowResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FollowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowResponse::CopyFrom(const FollowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FollowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowResponse::IsInitialized() const {
  return true;
}

void FollowResponse::Swap(FollowResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowResponse::InternalSwap(FollowResponse* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowResponse::GetMetadata() const {
  protobuf_proto_2faction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2faction_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FollowResponse

// .BaseResp baseResp = 255;
bool FollowResponse::has_baseresp() const {
  return this != internal_default_instance() && baseresp_ != NULL;
}
void FollowResponse::clear_baseresp() {
  if (GetArenaNoVirtual() == NULL && baseresp_ != NULL) delete baseresp_;
  baseresp_ = NULL;
}
const ::BaseResp& FollowResponse::baseresp() const {
  // @@protoc_insertion_point(field_get:FollowResponse.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::BaseResp::internal_default_instance();
}
::BaseResp* FollowResponse::mutable_baseresp() {
  
  if (baseresp_ == NULL) {
    baseresp_ = new ::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:FollowResponse.baseResp)
  return baseresp_;
}
::BaseResp* FollowResponse::release_baseresp() {
  // @@protoc_insertion_point(field_release:FollowResponse.baseResp)
  
  ::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void FollowResponse::set_allocated_baseresp(::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:FollowResponse.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
